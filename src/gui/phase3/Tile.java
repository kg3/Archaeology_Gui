package gui.phase3;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;

import javax.swing.JComponent;

import Archeology.v2.Map.Coordinate;

/**
 * Every tile holds an Image and a coordinate.
 * The Image comes out of Graphics class that holds the correct logic to display which Image.
 * @author ronin
 *
 */
public class Tile extends JComponent implements MouseListener, MouseMotionListener {
	
	private static final long serialVersionUID = 1L;
	private Coordinate tileCoordinate = null;
	private ImageFile tileImage = null;
	
	/**
	 * Instantiate the tile with an image & coordinate.
	 * For PopUpMenu (reinitializing MainFrame, even statically, is a huge issue; slow, not working etc.).
	 * Therefore, sending strings 'down the line' take care of that one issue for now.
	 * Problem with mouseEntered(MouseEvent e) {runningFrame.setStatusBar(this.getTileCoordinate().toString());}
	 * @param _arrayString string from the 2D array generated by Map
	 * @param _column in nested for loop presumably 
	 * @param _row in main for loop presumably
	 */
	public Tile(String _arrayString, Integer _column, Integer _row)
	{
		//Tile Specific options
		setTileImage(_arrayString);
		setTileCoordinate(_column,_row);

	}
	
	/**
	 * Paint the tile? (from TilComponent example)
	 */
	public void paint(Graphics g) {
        g.drawImage(getTileImage(), 0, 0, null);
    }
	
	/**
	 * Set Tile Dimensions? (from TileComponent example)
	 */
	public Dimension getPreferredSize() {
        if (getTileImage() == null) {
             return new Dimension(600,500);
        } else {
           return new Dimension(getTileImage().getWidth(), getTileImage().getHeight() );
       }
    }
	
	/**
	 * @return the tileCoordinate
	 */
	public Coordinate getTileCoordinate() {
		return tileCoordinate;
	}

	/**
	 * @return the tileImage
	 */
	public BufferedImage getTileImage() {
		return tileImage.getTile();
	}
	
	/**
	 * @param tileCoordinate the tileCoordinate to set
	 */
	private void setTileCoordinate(Integer _column, Integer _row) {
		this.tileCoordinate = new Coordinate(_column,_row);
	}
	
	/**
	 * @param tileImage the tileImage to set
	 */
	private void setTileImage(String _arrayString) {
		this.tileImage = new ImageFile(_arrayString);
	}
	
	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub	
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
	}

	@Override
	public void mouseDragged(MouseEvent e) {
		// TODO Auto-generated method stub
	}

	@Override
	public void mouseMoved(MouseEvent e) {
		// TODO Auto-generated method stub
	}

}
